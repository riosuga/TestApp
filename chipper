/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package latihan;

import java.util.Scanner;

/**
 *
 * @author rio.suga
 */
public class Chipper {

    public static void main(String[] args) {

        //  variable
        while(true){
        String kata = "ABCDEFGHIJKLMMOPQRSTUVWXYZ";
        int key = 12;
        String[] huruf = new String[26];

        //  isi array huruf
        for (char c = 'A'; c <= 'Z'; c++) {
            huruf[c - 65] = String.valueOf(c);
        }

        //  Tampilkan Plain Text
        System.out.println("Plain Text : " + kata);

        //  Proses Enkripsi
        String cipher = "";
        loop1:
        for (int a = 0; a < kata.length(); a++) {
            //  cari nomor dari tiap huruf variable kata
            int index_plain = -1;
            for (int b = 0; b < huruf.length; b++) {
                // Teknik Penulisan Short Hand If Else
                index_plain = (String.valueOf(kata.charAt(a)).equals(huruf[b])) ? b : -1;
                // Jika Ketemu Karakternya
                if (index_plain != -1) {
                    // Rumus Enkripsi --> C = (nomor_karakter_plain + key) mod 26                  
                    cipher += huruf[(index_plain + key) % 26];
                    continue loop1;
                }
            }

            //  Jika plain text tidak mengandung huruf maka, langsung dimasukkan ke variable cipher
            //  Misal, spasi atau angka
            cipher += kata.charAt(a);
        }

        //  Tampilkan hasil cipher
        System.out.println("Cipher Text : " + cipher);

        //  Konfirmasi apakah ingin di dekrip
        System.out.print("Apakah ingin di dekrip(Y/N)? ");
        String jawab = new Scanner(System.in).nextLine();

        if (jawab.equalsIgnoreCase("Y")) {
            String plaintext = "";

            //  Proses Dekrip
            loop1:
            for (int a = 0; a < cipher.length(); a++) {

                //  Cari nomor tiap karakter cipher
                int index_cipher = -1;
                for (int b = 0; b < huruf.length; b++) {
                    // Teknik Penulisan Short Hand If Else
                    index_cipher = (String.valueOf(cipher.charAt(a)).equals(huruf[b])) ? b : -1;
                    // Jika Ketemu  
                    if (index_cipher != -1) {
                        // Rumus Dekrip --> P = (nomor_karakter_cipher - key) mod 26
                        // jika (nomor_karakter_cipher - key) < 0 maka, 26 + (nomor_karakter_cipher - key)
                        // jika (nomor_karakter_cipher - key) >= 0 maka, (nomor_karakter_cipher - key) mod 26  
                        plaintext += ((index_cipher - key) >= 0) ? huruf[(index_cipher - key) % 26] : huruf[26 + (index_cipher - key)];
                        continue loop1;
                    }
                }

                //  Jika tidak ketemu
                plaintext += cipher.charAt(a);
            }

            //  Tampilkan Hasil Dekrip
            System.out.println("Hasil Dekrip : " + plaintext);
        }
    }
       
    }
}
